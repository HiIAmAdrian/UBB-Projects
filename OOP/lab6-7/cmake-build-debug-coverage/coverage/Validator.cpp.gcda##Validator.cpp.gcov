        -:    0:Source:/mnt/c/Users/astan/Desktop/OOP/lab6-7/domain/Validator.cpp
        -:    0:Graph:/mnt/c/Users/astan/Desktop/OOP/lab6-7/cmake-build-debug-coverage/CMakeFiles/lab6_7.dir/domain/Validator.cpp.gcno
        -:    0:Data:/mnt/c/Users/astan/Desktop/OOP/lab6-7/cmake-build-debug-coverage/CMakeFiles/lab6_7.dir/domain/Validator.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by astan on 5/3/2023.
        -:    3://
        -:    4:
        -:    5:#include "Validator.h"
        -:    6:
function _ZN9Validator10validationERK6Masina called 15 returned 73% blocks executed 94%
       15:    7:void Validator::validation(const Masina& m) {
       15:    8:    std::vector<std::string> message;
       15:    8-block  0
call    0 returned 15
       15:    9:    if (m.getNrInmatriculare() < 0)
call    0 returned 15
branch  1 taken 15 (fallthrough)
branch  2 taken 0 (throw)
       15:    9-block  0
branch  3 taken 1 (fallthrough)
branch  4 taken 14
        1:   10:        message.emplace_back("Numarul de inmatriculare trebuie sa fie pozitiv!");
        1:   10-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       15:   11:    if (m.getProducator().empty())
       15:   11-block  0
call    0 returned 15
branch  1 taken 15 (fallthrough)
branch  2 taken 0 (throw)
       15:   11-block  1
call    3 returned 15
call    4 returned 15
branch  5 taken 1 (fallthrough)
branch  6 taken 14
        1:   12:        message.emplace_back("Producatorul nu poate fi vid!");
        1:   12-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       15:   13:    if (m.getModel().empty())
       15:   13-block  0
call    0 returned 15
branch  1 taken 15 (fallthrough)
branch  2 taken 0 (throw)
       15:   13-block  1
call    3 returned 15
call    4 returned 15
branch  5 taken 1 (fallthrough)
branch  6 taken 14
        1:   14:        message.emplace_back("Modelul nu poate fi vid!");
        1:   14-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       15:   15:    if (m.getTip().empty())
       15:   15-block  0
call    0 returned 15
branch  1 taken 15 (fallthrough)
branch  2 taken 0 (throw)
       15:   15-block  1
call    3 returned 15
call    4 returned 15
branch  5 taken 1 (fallthrough)
branch  6 taken 14
        1:   16:        message.emplace_back("Tipul nu poate fi vid!");
        1:   16-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       15:   17:    if (!message.empty())
       15:   17-block  0
call    0 returned 15
branch  1 taken 4 (fallthrough)
branch  2 taken 11
        4:   18:        throw ValidationException(message);
        4:   18-block  0
call    0 returned 4
call    1 returned 4
branch  2 taken 4 (fallthrough)
branch  3 taken 0 (throw)
        4:   18-block  1
call    4 returned 4
call    5 returned 4
call    6 returned 4
    $$$$$:   18-block  2
call    7 never executed
       15:   19:}
       11:   19-block  0
call    0 returned 11
        4:   19-block  1
call    1 returned 4
        -:   20:
function _ZlsRSoRK19ValidationException called 0 returned 0% blocks executed 0%
    #####:   21:std::ostream& operator<<(std::ostream& os, const ValidationException& ex) {
    #####:   22:    for (const auto& msg : ex.getMessage())
    %%%%%:   22-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   22-block  1
call    3 never executed
call    4 never executed
    %%%%%:   22-block  2
call    5 never executed
    %%%%%:   22-block  3
call    6 never executed
    %%%%%:   22-block  4
call    7 never executed
branch  8 never executed
branch  9 never executed
    #####:   23:        os << msg << "\n";
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   23-block  0
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   23-block  1
call    6 never executed
    $$$$$:   23-block  2
call    7 never executed
    #####:   24:    return os;
    %%%%%:   24-block  0
        -:   25:}
        -:   26:
